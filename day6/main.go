package main

import (
	"errors"
	"fmt"
	"strings"
)

func main() {
	//	Convert the input to strings
	rawStrings := InputToStrings("RN2)HSX\nTYQ)JFL\nPBD)P1X\n69L)R17\nLWG)VPQ\nTL1)MC6\nLV4)LFV\nLGY)LF3\nY8D)CMZ\nN5F)CR9\nC6M)J97\nM39)BZP\nMNY)8NQ\nNVF)HXQ\nFKJ)KP3\n5YR)87D\nCYL)677\nJPT)ZL6\n79B)J1Q\nJYH)TS6\nLJN)QY3\n61T)YKQ\n3CM)8DT\n6FM)D8L\nTJ5)G4G\n1KL)BGT\n371)95C\n7VQ)241\nGWX)KNY\n7NS)VYG\nN5J)9K1\nVH9)Q3H\n4SL)JRQ\n6VB)Z96\nZ68)YY6\nRHD)S1K\nFP5)XJH\nBWC)98G\nJKT)PTH\nYKL)THM\nTJJ)BXL\nVM9)LV1\nW8C)P7R\nC5J)8SL\n7DG)RN2\nJQD)KXN\nC53)DX6\nRST)4DP\n652)FG6\n1PB)CCQ\nKY5)HBS\nJ68)GZT\nGMJ)WLX\nZM1)DFF\n38F)S9G\n869)TYQ\n534)H7C\nBXH)YQV\nFNP)15P\nYKK)F27\n925)HTT\n1FD)J77\n8RN)N35\n88J)65N\n9DM)CW4\nDSH)DXM\nQSK)2WM\n6DH)C53\n544)K2Z\nF65)9QT\n1H2)8MY\n6CS)F61\nSD1)82Q\nSW2)C5J\n96X)3CF\nM8G)4VR\nQML)XM8\n5C1)8R1\n2R9)YNZ\nPY5)LFR\nTL1)ZKK\nHHD)794\nTKX)LNB\n95C)BVL\n9NM)8HJ\nYKQ)Z29\nYMG)388\nZGV)XTB\n6PN)F7C\nDNQ)GSQ\n6T7)GZZ\nW3G)9X3\nF5T)KL4\n4H2)QBC\nHQC)GG4\n1N7)GH9\nJT2)QNR\nZHD)CTW\n3SS)9S4\nQ3H)2TB\nKXN)NV4\n13K)9WV\nPP1)VWR\n1YJ)BGM\n6RC)M6W\nNYZ)5P6\nHTT)HP1\n712)PSR\nDP8)N9L\nB2R)8N1\n4VR)FP5\nT3X)FCR\nPG9)NFN\n25P)D1Q\nNFK)CV8\nKGJ)G5S\nQRL)C4N\nBDM)F95\nY1T)5C1\nWLX)HX3\n12X)9TL\nBPD)SZJ\nGMP)RHF\nW4D)YYS\n722)JVQ\nJJ4)3FG\n3FG)X4Q\nZM6)3G3\nMC6)L7Q\nDPB)M39\nMQF)W28\n87V)8ZV\n7DG)M3Y\n1VN)MFS\n9Q6)3C9\n7MP)17N\nY5M)Y3X\n6N3)LTV\nVQ3)W8G\nQRK)GD2\nLNB)LFL\nDKF)RL2\n1T5)W95\nVZ5)K5V\n76Q)W4D\nQH2)8JR\n2WM)S9C\n9X1)V35\nKZN)YRP\n9X5)T47\nFPS)TCH\nYRJ)Y6B\n67X)SFG\nD68)YQ6\nYKV)B2L\n6PN)7FT\nKWW)ZQ6\nZTS)2BS\nHG6)2B8\n9K1)62W\n4YH)J98\nRRG)FJW\nJ98)QK3\nLRZ)P76\n83Y)GXQ\n838)X49\n4LB)GC3\n2R4)DPB\nMC4)31H\nM8Z)FKJ\n8R1)NDM\nGNX)GYF\nMFL)DL7\nWGD)JSX\nSGN)TKX\nC2D)P6P\nLHH)G31\nPN6)959\nQ4Q)1CD\n3GL)82F\nMS5)SPX\n7GZ)7MC\nJRQ)RWY\n51T)C2D\n9N6)PR9\nCTW)Y54\nMJW)LJ7\nQBC)PW7\nNDM)RD5\nK85)KWW\nHBS)T66\nPC2)H7X\nMFS)VF9\n4J5)X6P\nJP8)GF2\n7VZ)C3H\n6HK)KVS\nBKR)96X\nQMF)JT2\nXDC)FLD\nTG3)XDC\nCCQ)CH7\n48C)CTS\n9WV)1YK\n31G)M8Z\nRYN)HV3\nWC6)9DH\nH7C)XT5\n36P)SX4\nP28)RWX\nH7C)L59\nP3K)RKB\nHP3)MS5\nY1F)X6X\nLZV)F4K\n6TR)33Y\nYQ6)N8D\nMMP)6NJ\n4R8)J47\n9JV)JF2\n15R)ZQP\nCH7)31G\nFJW)1KF\nYSV)G5C\nLKV)C6M\nW28)HP3\n33Y)MQF\nV35)PN6\n24J)6PN\nZJ1)QH2\nBGT)S8W\n61W)MD5\nGZZ)M6B\nFCR)427\nRD5)WGD\n72B)9Q6\n62W)51T\n82Q)CQH\nMZT)TL1\nD8M)T2B\nR8X)8YD\nF1K)9WC\nZL6)3LX\nM6K)KTL\nGY6)GYN\nV8Q)J88\nWHH)STN\nXCC)WQK\nLGC)5JG\nS9G)FDZ\nLR8)W6M\nFC5)HX2\nMBC)M6F\nJSX)P3K\nK5J)Y9T\nZRC)99H\nRGR)HHD\nQK2)GYY\nY93)8QK\nZ5Z)7VQ\nDM6)41X\nZQP)KWZ\nT4S)8PB\n66B)SGZ\n2Z3)L28\nCR9)ZTW\n79G)MFL\nM56)X79\nJLJ)CJ9\nSD7)JZT\nKVS)YSV\nK2M)869\nBX1)371\nF4K)1H2\nRZQ)MP3\nHX2)GLM\n3M6)PY5\nYY6)M6G\n32F)MWS\n1JC)SPG\nY54)GQT\n1BN)MBC\n7MC)9JV\nG35)RTC\n38H)J68\nCFB)ZLH\nYYS)81D\nJ2H)557\nL57)N6J\n5YR)LLG\nSX4)JN2\nPMV)44K\nZH2)XSN\nQTJ)V8J\n5DZ)VZ5\nVYL)165\nPR9)W41\nNLD)61V\nTKD)H4G\n45M)H25\n9PF)WT5\n7FT)YM1\nLBT)32F\nSJS)224\n7NW)874\nDXZ)SW2\nXR2)SLK\nTD9)PC2\n1X1)WLM\n57Y)C1Y\nHCF)3GL\n7W2)2BB\n5RT)6T7\nYLZ)DGZ\nMBX)7LN\nF9G)MJW\n88P)8WS\nDRM)HCZ\nB7Z)BBH\nVD9)LKV\nMJW)J9N\nJYK)5CF\n5FJ)6TR\nDG4)QML\nMTY)55J\nNRM)BX1\nCRP)1KL\nYHP)JNJ\nDPH)N4X\nZLH)FNK\nQZ7)JTK\nW9Y)4P2\nZCQ)HCF\nY9K)MBX\nZGV)F9G\nZ96)W9Y\nXQT)YTZ\nJ88)FPS\n8DT)FWK\nT88)2L9\nFCH)ZCZ\nHWZ)7PJ\nVW3)P5F\nX8G)BW9\nGZD)VQ3\nSPX)LCT\nQK3)7MP\n31H)1M3\nMR9)RGR\nJF6)3PF\n7GK)JM7\nY41)QK2\n54M)1JC\n12D)B2R\nX77)ZHD\n3D6)5J6\nX79)ZRC\n3HJ)K1M\nW9Y)8PW\nH59)YLZ\n5YF)Z3M\n44V)ZGV\nGH9)LPP\nQTS)BHF\nWM1)8RN\nLHN)QSG\nYSQ)Y9R\n1YK)RYN\nJQK)QJ9\nJYH)VD9\nH84)4KZ\n8GC)7W2\n63N)QTS\n9CK)N89\n241)RZQ\nDBQ)D4H\nMTY)12X\nTWS)YRD\n83H)5YF\nLHN)5CM\n683)BPV\nSLK)WTG\n1N7)9HJ\nRKB)TGL\n2W5)2FR\nK5V)ZTD\nMZ7)5KW\nN8Y)DBX\nBBH)WLH\n7C3)F44\nM39)69L\nLV1)R1N\nQSK)PY6\nZWN)CX1\n427)MTY\nDW7)1RY\nZSQ)R5W\n6VT)22N\n557)2Y7\nQGN)P7Z\nF65)NYZ\nRJ9)QGN\nZCZ)KJ3\nZ1S)PKJ\nY4F)TWS\nQH7)ZH2\nJ8X)P5R\n2BB)GF4\n726)YP6\nYK5)7GZ\nLTV)7JD\n2NN)1ZW\nBVS)9CK\n361)FRD\nT21)712\nLVY)W8C\nV39)Z1S\n2S6)HQC\nRWY)MKM\nL28)F97\nPNB)B7G\nHCZ)HWZ\nMHT)RST\n34X)9SM\nKJ3)79F\nK8L)8GC\nFRD)9T6\nKK5)G2K\n82F)KYL\n5LB)V8Q\n21L)46C\nMFR)VKC\nHMH)7T2\nXK9)CBP\nZK3)X8C\nFVD)YKV\nJTK)CYN\nQDJ)3SS\nYNZ)DHZ\nF7R)7NW\nWLH)2T4\n1H2)D68\n98G)NLD\n959)PMV\nKMN)61T\nGQT)ZTS\nLF3)WHH\n3C9)J2X\n4K2)BJT\nR2K)5SJ\nW6M)N8P\nBJT)P4X\n41X)FS6\nMK8)KDB\nPJ7)HM1\nT5G)MHY\n8DT)FCH\nF9Y)BPT\nW8Q)3DD\nYQC)BGH\nNWN)C17\nMD5)Y1F\nMHY)QH7\nZMH)NN8\nV32)WTX\nFK1)ZJ1\nSD7)1TM\n1TK)T4P\n79F)3S8\nC1Y)QTL\nZML)PKM\nM3Y)2V5\nVQ8)ZMH\nS9C)M6K\nTKD)544\nDL7)K8L\nBHF)8BC\nWT5)NYF\nJD3)GNM\nGC3)32M\n5CF)XV8\nB3S)P5J\n5L7)5DV\nPGN)3JR\n2V5)843\n8NQ)RHD\nW5N)76Q\nGF4)QHF\n78B)MHT\nJZT)GZD\nRWX)FLN\nFGG)HN9\nMP3)B94\nF1C)79B\nC3H)7WK\nWLH)T21\nR5W)7VL\n6DS)3S6\nQNR)271\nY75)95S\nK8V)T4J\n2DN)RCV\n3G3)34X\n84Z)V32\n2T4)TWG\nS26)814\nDPF)D8M\nN9D)THZ\n8S7)2CC\n8CX)CLG\n4DZ)RBH\n42G)DWS\nSFN)LZV\nP7Z)LTH\nG2K)J2H\n2L4)5YZ\n6S6)GDR\n2CC)MZ7\nWNX)T9K\nDHZ)LVY\nWQK)5WJ\nLS1)44V\n2XL)2GH\nX3D)VTB\n5KW)PP1\n4BH)V39\nSTV)ZSQ\n83D)PH7\nVF9)VH9\nS8W)6VB\nF4B)Y75\nVYG)SFY\nKTL)45M\nLFL)PS5\nMWS)JLY\nSH3)39L\n9DH)61W\nMD4)NK9\n49C)2W5\n7CL)3TL\nCBP)2R4\n271)K7T\n3TL)5L7\nZM1)ZML\nW9T)GBS\n6FL)LHN\nZ7W)1PB\nJNJ)XCC\nYTZ)6DS\nBST)4BW\nSZJ)DKF\nPTH)2S6\n2VH)361\n8BC)Q4B\nPSR)7WV\n4BB)32V\nPQL)TJ5\nD3X)TVD\nHYC)J8X\nZPF)XXY\n1RT)BST\nQ3H)Q7C\nYVJ)ZWN\nXPX)1TK\nSJS)YK5\n22N)N72\nJRN)H84\n1T5)MD4\nXZG)4ZJ\n55J)8C7\nN8P)GMJ\nPSR)1VN\nYQV)FGH\nKRT)SZQ\nCP5)1N7\nQ5F)29K\nQ5P)QMF\nYP5)726\nYW9)4SL\nR8P)7ZB\n1RY)JF6\nZQZ)R8P\n7W2)YHP\n2B8)SH3\n794)H59\nBBJ)27J\nVJF)S4R\nXPT)RV1\n7T2)ZXL\nGLM)3BF\n32M)SS5\n9HJ)JG2\n8MY)YKL\nQMF)JQJ\nPK5)CLP\nGYF)WY9\nG5C)JGL\nJG2)K8V\nYQC)79G\n4PL)L45\n32P)BY1\nZDQ)925\nW41)G5P\nSM2)P87\nNBZ)5FJ\n814)KZN\nNJK)PNB\nFMY)NRM\n4VZ)CGG\n652)YKK\nWVB)BY5\nC4N)4R8\n9BM)87V\n9QT)HKS\nN6J)6HK\n8PW)B4S\nLPP)7NS\nHCF)DP8\n6DK)MC4\n4JV)48C\nWYH)JTD\n4D2)1SQ\nC17)MK8\nX77)WSM\nXTB)PCT\nJ47)9X5\n3Q3)88P\n97J)C92\nHP1)HG6\n4P2)DW7\n843)D3X\nTHZ)D4Q\nF44)36P\nP5R)WDY\nBZP)PJ7\nRDF)48T\nR17)7WG\nFWK)Y4F\n39X)JQD\nSY2)BDM\nDJN)Y93\nKTP)RTM\n73W)WNX\n935)LBT\nN2L)5DZ\nL7L)5MS\n224)785\nFDZ)GNX\nF3H)5WR\nLPB)YSQ\nDBV)Y9K\nZKP)97J\nFJW)ZM1\nMYD)MM5\nCOM)HM9\nSGZ)Q4Q\nNK9)4H2\nVM4)5G3\nQ7C)FPX\nFS6)M56\nXBR)N8Y\nBDL)SML\nYRD)HKR\nF7C)PRR\n388)RY4\nHV3)XBR\nM9X)NWN\nF27)CYL\nWDY)SJS\nZR4)5LY\nL7Q)YP5\nYRP)DY2\nHX3)1SD\nR9H)PBD\nX8D)W3B\nY41)6FM\nZ9F)4TR\nMM5)66B\nSML)38H\nNFN)1KN\n4W2)ZLV\nBZP)9X1\nQ7C)5DY\n1TM)HKB\nVKX)LWG\nFCR)F7F\nBY1)5J7\nTHS)LKP\nWQK)C19\n17N)Y1T\nCKH)L57\n78P)NV5\nGF2)FGG\nFGG)SD1\n874)KTP\nJRR)CFB\n4VC)T3X\nDGZ)WZC\n1CD)83D\nXXY)S26\nLKH)JD3\nK1M)KK5\n8YQ)6V7\nTKR)VQ8\nN7H)ZZP\nR1N)F1C\nTPW)R2K\nJGL)XNJ\n5WJ)72B\n62W)ZPF\nKNY)C7F\nSPG)3PC\nFNK)NBZ\nHKB)NFK\nCJ9)9WW\nKWZ)M8G\nP28)NVF\n6V7)MYD\nZYH)JYD\nXQT)VFM\n99H)9FJ\n4ML)GY6\nCP5)WM1\nX6P)STV\n1SQ)KRT\n7JD)J2B\n3JZ)F7R\n65N)QRK\nMW7)TFR\n2L9)ZDQ\nD4H)F9Y\nPS5)WTV\nG35)6QC\nLTH)9MY\nDQJ)2VH\nSPB)6HB\nL9W)L7L\nWNL)83H\n34G)JLJ\n8SL)H75\nJVQ)CKH\n165)VW3\nX4Q)DBQ\nVWR)7YW\nT9K)JW4\n79G)WYH\nS5T)K6R\n78P)QRX\nGZT)447\n3S6)4YH\nPCT)57Y\n39X)W9T\nY9R)5RT\n8C7)DNQ\n9WC)MNY\n785)SFN\nRCV)42G\nD1Q)Q5P\nC4Y)DG4\n72G)78B\nXHT)S5T\nHX3)WTB\nJVC)9NM\nKMZ)WVB\nHN9)5LB\nWTV)JP8\n8JP)Z5Z\nVTB)WHR\nBWP)YTK\nPY6)DXZ\n5G3)2NN\nZXL)3HJ\n3ZD)VKX\n4ZJ)8RD\nGWX)1FD\nWDY)4ML\nP4X)3D6\nJQJ)34G\nKNH)Q81\nHPR)SG1\nRY4)73V\n7ZB)BYD\nBPT)ZK3\nCLG)G7W\n3CF)1D1\nB5F)21L\nZ4Y)FBV\nGM9)JRR\nD9M)C7J\nB4S)ZKP\nP5J)32P\nT9K)FK1\nHXQ)7LT\nMSD)88Z\n5P6)JRN\nM91)JQK\nW82)ZSH\nWLM)935\nDY2)J81\n9XJ)4JZ\nN72)VM4\nT2B)V7B\nM6B)2XL\nJ77)N5J\n9W2)T2J\nJFL)Q11\nFNK)V15\nW8G)QRL\nT4J)F5T\nG5S)F65\nG31)LGC\n8YD)6CS\n838)TWL\nCW4)RDF\n46C)GM9\nHSX)MTZ\n447)RJ9\nN4X)25P\n9FJ)6S6\nW8S)ZVM\nNN8)N7H\n6T7)M9L\nCV8)2L4\nZZP)PYZ\nHKR)YXC\nC28)6VT\nFBV)QPZ\nWY9)BXH\nJF2)GSK\nPYR)195\nGD2)KY5\n1ZW)BKR\nCZL)VX9\nC7F)VP1\nVFM)CYB\nMC6)TZP\nC75)9BM\nGSQ)LHH\nJ2X)3K1\n7CL)JJ4\nRHF)MZT\n5DV)3CM\n5MR)Z68\n6HZ)N2L\nD39)HYC\nD4Q)DV6\n2TB)H3R\n673)J27\nJ81)B5F\n1D1)JKT\n44K)Y8D\n8PB)1T5\nC92)QZ7\nLW8)4TW\n3Q4)SGN\nFK1)D9Q\nZSH)PK5\nBXL)6HZ\nFQ5)T5G\nKDB)C75\n3HJ)LRZ\nVCJ)LV4\nG7K)4JV\nHMP)54M\n7PJ)3Q4\nGH2)5R2\nB1W)DPH\nP6P)1YJ\nB9S)3JZ\nJ1Q)NVV\nCQH)BWC\n48T)FNP\nZ29)86W\nNNC)LGY\nH3R)DPF\nCLP)JKB\nLLG)8TM\nTQQ)7C3\n8N1)XR2\nD9Q)B3S\nGC3)84Z\nQPZ)83Y\n5DR)JPT\n2BS)M2H\nF1T)XQT\nKYL)SPB\nVP1)Q6F\nP2H)NJK\nCTS)7VZ\nJ27)YD4\nNRM)Z4Y\nRTC)M91\n7LT)D39\nW95)T88\nM6W)691\nKP3)BBJ\nSZJ)HR2\nV8J)88J\n8VG)S95\nR3K)VWT\nZVM)XZG\n9MY)6L2\nL59)WGP\n5WR)LKH\nM9L)D2X\nJSF)X8D\nRGR)K85\nH7X)VJF\n7KT)Y26\nZK3)PG9\n61V)YQC\nNYF)8YQ\nZLV)WT4\n9X1)L9W\nCQK)GH2\nC7J)SD7\nFG6)15R\nK6R)Z9F\nSS5)WT1\n9X3)LJN\nJVQ)2Z3\n4BW)JRC\n5LY)XPX\nLJ7)D9M\nLRZ)PYR\nJW4)KT5\nHM9)LS1\nSG1)XHT\nHK8)4G3\nL45)KNH\n1KF)DJN\nKXG)TXP\nFPX)2DX\nDNQ)4K2\nDX6)W46\n7GH)3ZD\nMK8)5MR\nRKB)7DG\nQHF)X3D\nQJ9)5DR\nF97)PQL\nX6X)2DN\nPRR)ZYH\nCJ9)HK8\n677)MMP\nFRD)R3K\n13K)TJJ\n3PF)3FQ\nFGH)XX5\nN8D)9W2\n4DP)R9H\n3JR)YVJ\nB5F)VJB\nYTH)PJ2\n78M)4VZ\nPJ2)C28\n5DY)R8X\nTPW)HPR\nTZP)YW9\nJRC)4J5\n5SJ)XK9\nY6B)67X\nB7G)K5J\nBGH)MW7\n8JR)T2Z\nVX9)HQZ\nXM8)B9S\nMS5)HLP\n9S4)4BH\nLFR)K2M\n5JG)3SP\nJ2B)Z7W\nX49)TG3\n7LN)JPC\nGXQ)GS4\n6L2)TNX\n3FG)BDL\nT47)X77\nRX9)1X1\nGYY)KXG\nQS4)M9X\nY26)VM9\nRTM)9DM\n3HZ)12D\nKK2)ZM6\n68X)N9D\nB7G)3M6\nDB3)4LB\n2DX)RZ9\nC19)CQK\nNBB)3HZ\n8TM)F3H\nWT4)4PL\nCZL)JYH\n15P)KK2\n9MV)DRM\nTFR)JVC\nZQ6)TVW\nZ7W)DQJ\n8MW)QSK\nXJH)X8G\nP5F)NBB\nYQN)YMG\nF7F)73W\nY3X)652\nHM1)Y41\nZTD)TKR\n4YK)13K\n95J)1FJ\n1FJ)5YR\nPW7)534\nCX1)MFR\nDWS)TPW\nLFV)N5F\n427)P28\nK2Z)CP5\nV7B)SY2\nN8P)NNC\nF44)39X\n3FQ)2R9\nYXC)DM6\nZTW)9XJ\n7WG)2Q8\nQTL)M6H\nF1K)LRD\n3BF)THS\nT66)FMY\n27J)1RT\n1KN)BPD\nGNM)9PF\nMTZ)QWN\nQSG)MF2\n8T7)683\nZ5Z)8S7\n8SH)W4F\nXX5)BWP\n9DH)KGJ\nM9X)6N3\nTGL)MR9\nMQF)FQ5\nTS6)6FL\nCYN)6DH\n195)SAN\nSTN)WZL\nRBH)M8S\n73V)WNL\nBPV)HMH\n8QK)DBV\nWY9)JTV\nG7W)9N6\nTXP)4BB\nPH7)WC6\nCGG)1BN\nJF6)NNR\n5MS)DB3\n9SM)965\nD8L)916\n691)7CL\n4G3)8MW\n6NJ)T4S\n7WK)RX9\nJLY)Y5M\nDBX)J1K\nGBS)F4B\nHXQ)CRP\nWTX)8VG\nWGP)YOU\nTVW)G7K\nM2H)GKG\n65N)722\n5J7)XPT\nTHM)78M\nQY3)CZL\n9SM)ZR4\nP76)W8S\nBYD)QTJ\nJYD)LW8\n4G3)W3G\n5R2)QS4\n2GH)HZ9\nLCT)F1K\nWSM)YTH\n21L)LR8\nHR2)W5N\n916)7KT\n9TL)7GH\nN9L)W8Q\nVJB)TD9\nFLN)838\n1SD)LPB\nHKS)49C\n88Z)YRJ\nCYB)68X\nCH7)JYK\nXV8)4YK\nPXJ)SM2\n2Q8)8T7\n6QC)G9M\nBVL)6DK\nJ1K)FC5\nW3B)4DZ\n4TW)YQN\nHLP)8JP\nM8S)S76\nYD4)Q5F\n48T)GWX\nPKM)4W2\n86W)FG2\nJTD)JSF\nVJB)B7Z\nZM6)P2H\nG9M)TKD\nZQP)8XQ\nTWG)PXJ\n8XQ)3Q3\nGG4)ZQZ\nW4F)FVD\nWT1)673\n5CM)4D2\nK7T)24J\n9HJ)8SH\nQ6F)VYL\n8RD)78P\nJG2)6RC\nQ6F)BKL\nT2Z)KMZ\nLR8)KMN\nGKG)38F\nXT5)8CX\nFG2)VCJ\nV15)9MV\nGBS)4VC\nM6G)TQQ\nJ9N)QDJ\nMF2)BVS\nBX1)C4Y\n1M3)95J\nJ97)7GK\nVWT)PGN\nS9G)72G\n87D)B1W\nPYZ)F1T\nZCZ)W82\nWHR)CRV\n7GK)63N\nJN2)RRG\nQRX)HMP\n4VR)ZCQ\nV8Q)GMP\nSFG)RXQ\n39L)G35\nWZL)DSH\nTWL)MSD")
	//rawStrings := InputToStrings("COM)B\nB)C\nC)D\nD)E\nE)F\nB)G\nG)H\nD)I\nE)J\nJ)K\nK)L\nK)YOU\nI)SAN")
	//	Convert strings to Objects
	var objects []*ObjectNonRecursive
	for _, rawString := range rawStrings {
		object, err := StringToObject(rawString)
		if err == nil {
			objects = append(objects, object)
		}
	}

	//	Build recursion tree
	tree := BuildTree(objects, "COM")

	//count := OrbitsCalculator(tree, 0)

	//fmt.Println(DistanceToObject("SAN", *tree))
	//fmt.Println(DistanceToObject("YOU", *tree))
	//fmt.Println(ContainsObject(tree, "SAN"))
	//fmt.Println(CrossingPoint(tree))
	fmt.Println(GetOrbitalDistance(tree))

}

type Object struct {
	name  string
	orbit []*Object
}

type ObjectNonRecursive struct {
	name  string
	orbit string
}

func InputToStrings(input string) []string {
	return strings.Split(input, "\n")
}

func StringToObject(orbitString string) (*ObjectNonRecursive, error) {
	stringParts := strings.Split(orbitString, ")")
	if len(stringParts) < 2 {
		return nil, errors.New("the string must respect the form of A)B with A the center and B the object of the orbit")
	}
	return &ObjectNonRecursive{
		name:  stringParts[0],
		orbit: stringParts[1],
	}, nil
}

func BuildTree(objects []*ObjectNonRecursive, parentName string) *Object {
	parentObjects := FindObjects(parentName, objects)
	parent := Object{
		name:  parentName,
		orbit: nil,
	}

	for _, object := range parentObjects {
		parent.orbit = append(parent.orbit, BuildTree(objects, object.orbit))
	}
	return &parent
}

func FindObjects(name string, objects []*ObjectNonRecursive) []*ObjectNonRecursive {
	var result []*ObjectNonRecursive
	for _, object := range objects {
		if object.name == name {
			result = append(result, object)
		}
	}
	return result
}

func OrbitsCalculator(tree *Object, level uint) uint {
	var count uint = 0
	for _, object := range tree.orbit {
		count += level + 1 + OrbitsCalculator(object, level+1)
	}
	return count
}

func DistanceToObject(to string, tree Object) (uint, error) {
	switch tree.orbit {
	case nil:
		if tree.name == to {
			return 0, nil
		} else {
			return 0, errors.New("")
		}
	default:
		for _, object := range tree.orbit {
			result, err := DistanceToObject(to, *object)
			if err == nil {
				return 1 + result, nil
			}
		}
	}
	return 0, errors.New("")
}

func ContainsObject(tree *Object, name string) bool {
	if tree.name == name {
		return true
	} else if tree.orbit == nil {
		return false
	} else {
		for _, object := range tree.orbit {
			if ContainsObject(object, name) {
				return true
			}
		}
		return false
	}
}

func CrossingPoint(tree *Object) *Object {
	for _, object := range tree.orbit {
		if ContainsObject(object, "SAN") && ContainsObject(object, "YOU") {
			return CrossingPoint(object)
		}
	}
	return tree
}

func GetOrbitalDistance(tree *Object) uint {
	crossingPoint := CrossingPoint(tree)
	distanceToSanta, _ := DistanceToObject("SAN", *crossingPoint)
	distanceToYou, _ := DistanceToObject("YOU", *crossingPoint)
	return distanceToSanta + distanceToYou - 2
}
